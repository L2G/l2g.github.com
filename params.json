{"body":"### Hello!\r\n\r\nThanks for taking the time to come by. Here I highlight some of the projects I'm working on and most excited about at GitHub.\r\n\r\n### What the hell am I doing? (October 18, 2012)\r\n\r\nWhile researching port knocking, I stumbled upon [Ostiary](http://ingles.homeunix.net/software/ost/).  It uses a client/server protocol that has a very simple design, yet still manages to resist eavesdropping, man-in-the-middle attacks, and replay attacks.  Likewise, its implementation is so simple that it's resistant to denial-of-service and buffer overflow attacks, and lightweight enough that the author has run a client on a Palm handheld and a server on a Macintosh SE/30 (which makes it a pretty mature protocol as well!). I've created repos for the basic [C server and client](https://github.com/L2G/ostiary) and the [Java client](https://github.com/L2G/java-ostiary), and I've already squashed a bug in the latter.\r\n\r\n[rest-client](https://github.com/archiloque/rest-client) is a nice little Ruby gem for accessing Web services via HTTP, particularly nice for those using REST. However, the maintainer seems to have his attention elsewhere these days, so I've been trying to drum up support for a @rest-client \"organization\" to allow collective maintenance of the project.\r\n\r\nI use Ruby on Windows at work. This poses a small problem when I use applications like RSpec and Cucumber, which use so-called ANSI terminal codes to color their output. The quick and easy solution to this is [ANSICON](https://github.com/adoxa/ansicon), but this requires installation of a third-party binary in the Windows system directory, something <span lang=\"de\" xml:lang=\"de\">verboten</span> by my employer's IT policies. So I have been [patching in support for the win32console gem for applications I use](https://github.com/L2G/cucumber/tree/win-ansi-ebony-ivory). Eventually I'd like to make a separate gem that just takes care of the Windows color details for other applications.\r\n\r\nI've started a stupid little project called [rubar](https://github.com/L2G/rubar) (etymology: \"Ruby\" + \"fubar\") that will allow for use of the social network/game [fubar.com](http://fubar.com/) from a command-line interface. It is designed to be a tool, not a robot.\r\n\r\n### Contact me\r\n\r\nBecause of the horrific amount of email I receive these days, the best way (relatively) to get my attention is by telephone. You may reach me at this international \"iNum\" number:\r\n\r\n**[+883-5100-0119-3167](tel:+883510001193167)**\r\n\r\nDial this as you would any international number; for example, callers in North America would replace the plus sign with 011. Alternatively, if you are using a SIP provider that peers with [SIP Broker](http://www.sipbroker.com/), replace the plus sign with \\*462.","name":"L2G @ GitHub","google":"","tagline":"Lawrence Leonard \"Larry\" Gilbert and his geeky obsessions of the moment","note":"Don't delete this file! It's used internally to help with page regeneration."}